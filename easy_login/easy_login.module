<?php

function easy_login_user_login($account) {
  if (empty($account->field_last_name->value)) {
    drupal_set_message(t('Please set at least your last name on your !account. ' .
       'This will allow your user registration to be linked properly to the central database of records.',
        array('!account' => \Drupal::l('user account', $account->urlInfo('edit-form')))));
    return;
  }
  elseif ($account->access->value!==0 && !empty($account->field_indicia_user_id->value))
    // if not first login and we know our indicia user ID, then there is nothing more to do
    return;
  else {
    // if we've logged in before but don't have a warehouse user ID, then it means Easy Login was installed since
    // we last logged in. So there might be existing records to move into our user account.
    $needToProcessExistingRecords = ($account->access->value!==0) && empty($account->field_indicia_user_id->value);
    easy_login_synchronise_account_to_warehouse($account, $needToProcessExistingRecords);
  }
}

function easy_login_user_presave(Drupal\Core\Entity\EntityInterface $entity) {
  // @todo hook this to the resolve Indicia user ID code.
}

function easy_login_synchronise_account_to_warehouse($account, $needToProcessExistingRecords) {
  $fieldsToSyncByCaption = array();
  $account = \Drupal\user\Entity\User::load($account->uid->value);
  foreach ($account as $field => $def) {
    // @todo The following should only pick up field values that have actually changed.
    if (preg_match('/^field_indicia_/', $field) && $field!=='field_indicia_user_id') {
      $value = empty($def->value) ? $def->value : $def;
      $fieldsToSyncByCaption[$def->label] = $value;
    }
    /*
      // fields that are available for synchronisation must be called field_indicia_*. We
      // also don't want to handle anything that has not actually changed.
      $userField = $existingUser->$field;
      //Check for empty as fields that have not been synced before will have empty $userField
      if (empty($userField[LANGUAGE_NONE][0]['value']) || ($value !== $userField[LANGUAGE_NONE][0]['value'])) {
        $fieldsToSync[$field] = $value;
      }
    }*/
  }
/*

    if ($account->uid===$user->uid) {
      // If the user has not filled in preferences then prompt them. Allow for the fact that the site administrator might have
      // hidden these fields if they feel they are not relevant to the site.
      $requests = array();
      // $account->field_taxon_groups etc contains something if the field exist
      if (isset($account->field_location) && empty($edit['field_location'][LANGUAGE_NONE]))
        $requests[] = t('the area you would most often like to record in');
      if (isset($account->field_taxon_groups) && empty($edit['field_taxon_groups'][LANGUAGE_NONE]))
        $requests[] = t('the list of species groups you are particularly interested in');
      if (!empty($requests))
        drupal_set_message(t('Why not tell us !requests to help us tailor the system to your needs? '.
          'You can fill this information in on your !link.',
          array(
            '!requests'=>implode(' '.t('and').' ', $requests),
            '!link'=>l('user preferences', 'user/'.$account->uid.'/edit')
          )
        ));
    }
  }
  easy_login_move_form_data_into_account($edit, $account);
  $response=easy_login_call_get_user_id($account, null, null, $fieldsToSyncByCaption, $needToProcessExistingRecords);
  easy_login_handle_get_user_id_response($account, $response);
*/
}